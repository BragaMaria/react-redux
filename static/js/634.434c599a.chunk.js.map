{"version":3,"file":"static/js/634.434c599a.chunk.js","mappings":"qMAQA,MAwBMA,GAAiBC,EAAAA,EAAAA,GAAU,CAC/BC,KAAM,SADeD,EAxBLE,IAAkD,IAAjD,aAACC,EAAY,SAAEC,EAAQ,MAAEC,EAAK,WAAEC,GAAWJ,EAC5D,OACEK,EAAAA,EAAAA,MAAA,QAAMC,SAAUL,EAAaC,GAAUK,SAAA,EACpCC,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAWC,EAAAA,KAC1CF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GACpCE,EAAAA,EAAAA,GAAiB,KAAMD,EAAAA,GAAO,CAACE,KAAM,cACvCC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAQC,UAAUT,UAC/BC,EAAAA,EAAAA,IAAY,KAAM,aAAc,GAAIE,EAAAA,GAAO,CAACE,KAAM,YAAa,iBAGjER,IAAcS,EAAAA,EAAAA,KAAA,OAAKI,IAAKb,EAAYc,IAAI,QACxCd,IACII,EAAAA,EAAAA,IAAY,UAAW,UAAW,CAACC,EAAAA,GAAWC,EAAAA,IAElDP,IAASU,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAAA,EAAQI,iBAAiBZ,SAChDJ,KAEHU,EAAAA,EAAAA,KAAA,OAAAN,UACEM,EAAAA,EAAAA,KAAA,UAAQD,KAAM,SAASL,SAAC,cAErB,IA2BX,GAAea,EAAAA,EAAAA,KALDC,IAAK,CACjBjB,WAAYiB,EAAMC,KAAKlB,WACvBmB,OAAQF,EAAMC,KAAKC,UAGQ,CAACC,MAAK,KAAEC,OAAM,MAA3C,EAnBeC,IAOXrB,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEM,EAAAA,EAAAA,KAAA,MAAAN,SAAI,WACJM,EAAAA,EAAAA,KAAChB,EAAc,CAACO,WAAYsB,EAAMtB,WAAYF,SARhCyB,IAChBD,EAAMF,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,QAAQ,Q","sources":["components/Login/Login.js"],"sourcesContent":["import {reduxForm} from \"redux-form\";\r\nimport {CreateField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport classes from \"../common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit, showData, error, captchaUrl}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit(showData)}>\r\n      {CreateField('Email', 'email', [required], Input)}\r\n      {CreateField('Password', 'password', [required,\r\n        maxLengthCreator(50)], Input, {type: 'password'})}\r\n      <div className={classes.flexBlock}>\r\n        {CreateField(null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n      </div>\r\n\r\n      {captchaUrl && <img src={captchaUrl} alt=\"img\"/>}\r\n      {captchaUrl\r\n        && CreateField('captcha', 'captcha', [required], Input)}\r\n\r\n      {error && <div className={classes.formSummaryError}>\r\n        {error}\r\n      </div>}\r\n      <div>\r\n        <button type={\"submit\"}>Login</button>\r\n      </div>\r\n    </form>)\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const showData = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm captchaUrl={props.captchaUrl} showData={showData}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mstp = (state) => ({\r\n  captchaUrl: state.auth.captchaUrl,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mstp, {login, logout})(Login)"],"names":["LoginReduxForm","reduxForm","form","_ref","handleSubmit","showData","error","captchaUrl","_jsxs","onSubmit","children","CreateField","required","Input","maxLengthCreator","type","_jsx","className","classes","flexBlock","src","alt","formSummaryError","connect","state","auth","isAuth","login","logout","props","formData","email","password","rememberMe","captcha"],"sourceRoot":""}