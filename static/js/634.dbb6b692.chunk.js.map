{"version":3,"file":"static/js/634.dbb6b692.chunk.js","mappings":"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","sources":["components/Login/Login.js","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://my-app/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import {reduxForm} from \"redux-form\";\r\nimport {CreateField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login, logout} from \"../../redux/auth-reducer\";\r\nimport classes from \"../common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst LoginForm = ({handleSubmit, showData, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit(showData)}>\r\n      {CreateField('Email', 'email', [required], Input)}\r\n      {CreateField('Password', 'password', [required,\r\n        maxLengthCreator(50)], Input, {type:'password'})}\r\n      <div className={classes.flexBlock}>\r\n        {CreateField(null, 'rememberMe', [], Input, {type:'checkbox'}, 'remember me')}\r\n      </div>\r\n      <div className={classes.formSummaryError}>\r\n        {error}\r\n      </div>\r\n      <div>\r\n        <button type={\"submit\"}>Login</button>\r\n      </div>\r\n    </form>)\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({\r\n  form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const showData = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe)\r\n    console.log(formData);\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Login</h1>\r\n      <LoginReduxForm showData={showData}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mstp = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mstp, {login, logout})(Login)","import classes from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nexport const TextArea = ({input, meta: {touched, error}, ...props}) => {\r\n  const isError = touched && error\r\n\r\n  return (\r\n    <div className={`${classes.formControl} ${isError && classes.error}`}>\r\n      <textarea  {...input} {...props}/>\r\n      {isError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n  const isError = touched && error\r\n\r\n\r\n  return (\r\n    <div className={`${classes.formControl} ${isError ? classes.error : \"\"}`}>\r\n      <input  {...input} {...props}/>\r\n      {isError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = '') =>\r\n  <div>\r\n    <Field placeholder={placeholder} name={name} component={component} validate={validators} {...props}/>{text}\r\n  </div>\r\n","export const required = (value) => {\r\n  if (value) return undefined;\r\n  return 'Error message';\r\n\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n  if (value.length <= maxLength) {\r\n    return undefined;\r\n  } else {\r\n    return `Max length ${maxLength} symbols`;\r\n  }\r\n\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__xo4Lp\",\"error\":\"FormsControls_error__7-m2O\",\"formSummaryError\":\"FormsControls_formSummaryError__8nLkN\",\"flexBlock\":\"FormsControls_flexBlock__+SPKh\"};"],"names":["LoginReduxForm","reduxForm","form","_ref","handleSubmit","showData","error","_jsxs","onSubmit","children","CreateField","required","Input","maxLengthCreator","type","_jsx","className","classes","flexBlock","formSummaryError","connect","state","isAuth","auth","login","logout","props","formData","email","password","rememberMe","console","log","TextArea","input","meta","touched","_objectWithoutProperties","_excluded","isError","concat","formControl","_objectSpread","_ref2","_excluded2","placeholder","name","validators","component","arguments","length","undefined","text","Field","validate","value","maxLength"],"sourceRoot":""}